worker_processes <%= node['rails']['unicorn']['worker_processes'] %>
working_directory "<%= node['rails']['app_root'] %>"
listen "<%= node['rails']['unicorn']['listen'] %>"
pid "<%= node['rails']['unicorn']['pid_file'] %>"

timeout <%= node['rails']['unicorn']['timeout'] %>

preload_app <%= node['rails']['unicorn']['preload_app'] %>

stdout_path "<%= node['rails']['unicorn']['stdout_log'] %>"
stderr_path "<%= node['rails']['unicorn']['stderr_log'] %>"

GC.respond_to?(:copy_on_write_friendly=) and GC.copy_on_write_friendly = true

before_fork do |server, worker|
  ENV['BUNDLE_GEMFILE'] = <%= node['rails']['gemfile'] %>
  defined?(ActiveRecord::Base) and ActiveRecord::Base.connection.disconnect!
  old_pid = "#{server.config[:pid]}.oldbin"
  if old_pid != server.pid
    begin
      sig = (worker.nr + 1) >= server.worker_processes ? :QUIT : :TTOU
      Process.kill(sig, File.read(old_pid).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
    end
  end
end

after_fork do |server, worker|
  defined?(ActiveRecord::Base) and ActiveRecord::Base.establish_connection
end
