APP_PATH = "/var/app"

worker_processes <%= @worker_processes %>
working_directory APP_PATH
listen "/tmp/unicorn.sock"
pid "#{APP_PATH}/tmp/pids/unicorn.pid"

timeout <%= @timeout %>

preload_app <%= @preload_app %>

stdout_path "#{APP_PATH}/log/unicorn.stdout.log"
stderr_path "#{APP_PATH}/log/unicorn.stderr.log"

GC.respond_to?(:copy_on_write_friendly=) and GC.copy_on_write_friendly = true

before_fork do |server, worker|
  defined?(ActiveRecord::Base) and ActiveRecord::Base.connection.disconnect!
  old_pid = "#{server.config[:pid]}.oldbin"
  if old_pid != server.pid
    begin
      sig = (worker.nr + 1) >= server.worker_processes ? :QUIT : :TTOU
      Process.kill(sig, File.read(old_pid).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
    end
  end
end

after_fork do |server, worker|
  defined?(ActiveRecord::Base) and ActiveRecord::Base.establish_connection
end
